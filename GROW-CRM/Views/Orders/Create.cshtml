@model GROW_CRM.Models.Order

@{ ViewData["Title"] = "Create"; }

<h2>Create Order for: @Model.Member.FullName</h2>

<hr />
<form asp-action="Create" method="post" enctype="multipart/form-data">
    <div class="row">
        <div class="col-md-6">
            <fieldset class="form-group border p-4 rounded">
                <legend class="w-auto">Customer Information</legend>
                <input type="hidden" name="ID" value="@Model.ID" />
                <input type="hidden" name="MemberID" value="@Model.MemberID" />
                <input type="hidden" name="Date" value="@Model.Date" />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="col-md-6">
                    <p><strong>Member:</strong> @Model.Member.FullName</p>
                    <p><strong>Household:</strong> @Model.Member.Household.Name</p>
                    <p><strong>Address:</strong> @Html.DisplayFor(model => model.Member.Household.FullAddress)</p>
                    <p><strong>Date: </strong>@Html.DisplayFor(model => model.Date)</p>
                </div>
            </fieldset>
        </div>        
            <div class="col-md-6">
                <fieldset class="form-group border p-4 rounded">
                    <legend class="w-auto">Order Information</legend>
                    <div class="form-group" id="ListMemberIncomeSituations">
                        <label class="control-label"><strong>Order Items:</strong> &nbsp; &nbsp;</label><span style="color:red">*</span><button class="btn btn-outline-success modal-link" tag="" name="CreateForm" data-toggle="modal" data-target="#theMemberIncomeSituationModal" title="Add Order Items" type="button">Add Item</button>
                        <div class="col-md-offset-12" id="OrderItemList">
                            <table>
                                @{
                                    //double subtotal = 0;
                                    //double taxes = 0;
                                    double total = 0;

                                    foreach (var item in Model.OrderItems.OrderBy(s => s.Item.Name))
                                    {
                                        total += (item.Item.PriceAfterDiscount * item.Quantity);
                                        @:<tr><td>
                                            @item.Item.Name
                                        @:</td><td>
                                            @item.Quantity
                                        @:</td><td>
                                            @item.Item.PriceAfterDiscount
                                        @:</td><td>
                                        @:&nbsp; &nbsp;
                                            <button class="btn btn-sm modal-link" tag="@item.ID" name="EditForm" data-toggle="modal" data-target="#theMemberIncomeSituationModal" title="Edit @item.Item.Code" type="button">&#x270D;</button>
                                            <button class="btn btn-sm modal-link" tag="@item.ID" name="DeleteForm" data-toggle="modal" data-target="#theMemberIncomeSituationModal" title="Delete @item.Item.Code" type="button">&#x274C;</button>
                                        @:</td></tr>
                                    }
                                    @*<tr>
                                        <td>Subtotal:</td>
                                        <td>@subtotal</td>
                                        <td><input type="hidden" name="Subtotal" value="@subtotal"/></td>
                                      </tr>
                                      taxes = Math.Round(subtotal * 0.15, 2);
                                      <tr>
                                        <td>GST/HST:</td>
                                        <td>@taxes</td>
                                        <td><input type="hidden" name="Taxes" value="@taxes"/></td>
                                      </tr>
                                      total = subtotal + taxes;*@
                                      <tr>
                                      <td></td>
                                        <td></td>
                                        <td><b>Total: </b>$@total.ToString("N2")</td>
                                        <td><input type="hidden" name="Total" value="@total" /></td>
                                      </tr>
                                 }
                            </table>
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>
    <div class="row">
        <div class="col-md-6">
            <fieldset class="form-group border p-4 rounded">
                <legend class="w-auto">Pay and Submit</legend>
                <div class="form-group">
                    <label asp-for="PaymentType" class="control-label"></label><span style="color:red">*</span>
                    <select asp-for="PaymentTypeID" class="form-control" asp-items="ViewBag.PaymentTypeID"></select>
                    <span asp-validation-for="PaymentTypeID" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Checkout" class="btn btn-primary" />
                </div>
            </fieldset>
        </div>
    </div>
</form>

<div>
    <a href='@ViewData["returnURL"]'>Back to Orders</a> |
    <a asp-controller="Members" asp-action="Details" asp-route-id="@Model.Member.ID">Back to Member</a> | 
    <a asp-action="Delete" asp-route-id="@Model.ID">Delete</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        //New for modal
        function refreshModal(actionForm, MemberIncomeSituationsID) {
            switch (actionForm) {
                case 'CreateForm': $('#formMemberIncomeSituationBody').load('/OrderItems/CreateOrderItem/' + @Model.ID);
                break;
                case 'EditForm': $('#formMemberIncomeSituationBody').load('/OrderItems/EditOrderItem/' + MemberIncomeSituationsID);
                break;
                case 'DeleteForm': $('#formMemberIncomeSituationBody').load('/OrderItems/DeleteOrderItem/' + MemberIncomeSituationsID)
                break;
            default: break;
            };
        return;
        };
        $(document).on("click", ".modal-link", function () {
            var actionForm = $(this).attr("name");
            var MemberIncomeSituationsID = $(this).attr("tag");
            refreshModal(actionForm, MemberIncomeSituationsID);
        });
        $(document).on("click", "#submitMemberIncomeSituationsForm", function (event) {
            event.preventDefault();
            var form = $('#theMemberIncomeSituationsForm');
            if (form.valid()) {
                $.ajax({
                    type: "POST",
                    url: form.attr('action'),
                    data: form.serialize(),
                    success: function () {
                        $('#theMemberIncomeSituationModal').modal('hide');
                    },
                    error: function () {
                        alert("Operation Failed.  There was a problem maintaing the data.");
                    }
                });
            }
            return false;
        });
        $('#theMemberIncomeSituationModal').on('hide.bs.modal', function () {
            console.log('hey')
            $('#OrderItemList').load('/Orders/OrderItemList/@Model.ID');
            });
    </script>        
}
