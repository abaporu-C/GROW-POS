@model IEnumerable<GROW_CRM.ViewModels.HouseholdInformation>

@{
    ViewData["Title"] = "HouseholdInformation";
}

<h1>Household Information</h1>

<p>
    <a asp-action="DownloadHouseholds" class="btn btn-info float-right">Download Household Information</a>
</p>
<form>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Gender)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Age)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PostalCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DietaryConcerns)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IncomeSource)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TotalIncome)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PostalCode)
                </td>

                <td>
                    <button type="button" class="btn btn-secondary" data-container="body" data-toggle="popover" data-placement="right" data-content="@item.DietaryConcerns">
                        Concerns:
                    </button>
                </td>

                @*<td>
                    <strong>Dietary Concerns:</strong>
                    @{
                        int theCount = item.DietaryConcerns.Count();
                        if (theCount > 0)
                        {
                            string first = item.DietaryConcerns.FirstOrDefault().ToString();
                            if (theCount > 1)
                            {
                                string theList = first;
                                var c = item.DietaryConcerns.ToList();
                                for (int i = 1; i < theCount; i++)
                                {
                                    theList += ", " + c[i];
                                }
                                @:
                                <a tabindex="0" class="" role="button" data-toggle="popover"
                                   data-trigger="focus" title="Health and Dietary Concerns" data-placement="bottom"
                                   data-content="@theList">
                                    @first... <span class="badge badge-info">
                                        @theCount
                                    </span>
                                </a>
                            }
                            else
                            {
                                @:Alt:
                                @first
                            }
                        }
                    }
                </td>*@

                <td>
                    @Html.DisplayFor(modelItem => item.IncomeSource)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalIncome)
                </td>
            </tr>
            }
        </tbody>
    </table>
</form>

@section Scripts {
    <script type="text/javascript">
        $(function () {
            $('[data-toggle="popover"]').popover();
        });
    </script>
}